#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BorrowAutomation
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Borrow")]
	public partial class dbBorrowDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertTool123(Tool123 instance);
    partial void UpdateTool123(Tool123 instance);
    partial void DeleteTool123(Tool123 instance);
    partial void InsertEmployee123(Employee123 instance);
    partial void UpdateEmployee123(Employee123 instance);
    partial void DeleteEmployee123(Employee123 instance);
    partial void InsertBorrow(Borrow instance);
    partial void UpdateBorrow(Borrow instance);
    partial void DeleteBorrow(Borrow instance);
    #endregion
		
		public dbBorrowDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["BorrowConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public dbBorrowDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbBorrowDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbBorrowDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbBorrowDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Account> Accounts
		{
			get
			{
				return this.GetTable<Account>();
			}
		}
		
		public System.Data.Linq.Table<Tool123> Tool123s
		{
			get
			{
				return this.GetTable<Tool123>();
			}
		}
		
		public System.Data.Linq.Table<Employee123> Employee123s
		{
			get
			{
				return this.GetTable<Employee123>();
			}
		}
		
		public System.Data.Linq.Table<Borrow> Borrows
		{
			get
			{
				return this.GetTable<Borrow>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Login")]
	public partial class Account
	{
		
		private string _UserName;
		
		private string _Password;
		
		public Account()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(50)")]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this._UserName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(50)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this._Password = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tool")]
	public partial class Tool123 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CountTool;
		
		private System.Nullable<double> _IDTool;
		
		private System.Nullable<System.DateTime> _DateInvoice;
		
		private string _InvoiceNumber;
		
		private System.Nullable<System.DateTime> _DeliveryDates;
		
		private string _Description;
		
		private System.Nullable<double> _Amount;
		
		private string _Unit;
		
		private System.Nullable<double> _Price1;
		
		private System.Nullable<double> _Price2;
		
		private System.Nullable<double> _CostCenter;
		
		private string _CostCenterName;
		
		private System.Nullable<double> _Location;
		
		private string _ResponsiblePerson;
		
		private string _RegisterDepartment;
		
		private string _RegisterSAP;
		
		private string _RegisterAS400;
		
		private System.Nullable<double> _EV_Group;
		
		private string _InternalOrder;
		
		private string _Type;
		
		private System.Nullable<double> _DocWithdrawNumber;
		
		private System.Nullable<System.DateTime> _DateWithdraw;
		
		private string _FromTranfer;
		
		private string _DocTranfer;
		
		private string _Note;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCountToolChanging(int value);
    partial void OnCountToolChanged();
    partial void OnIDToolChanging(System.Nullable<double> value);
    partial void OnIDToolChanged();
    partial void OnDateInvoiceChanging(System.Nullable<System.DateTime> value);
    partial void OnDateInvoiceChanged();
    partial void OnInvoiceNumberChanging(string value);
    partial void OnInvoiceNumberChanged();
    partial void OnDeliveryDatesChanging(System.Nullable<System.DateTime> value);
    partial void OnDeliveryDatesChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnAmountChanging(System.Nullable<double> value);
    partial void OnAmountChanged();
    partial void OnUnitChanging(string value);
    partial void OnUnitChanged();
    partial void OnPrice1Changing(System.Nullable<double> value);
    partial void OnPrice1Changed();
    partial void OnPrice2Changing(System.Nullable<double> value);
    partial void OnPrice2Changed();
    partial void OnCostCenterChanging(System.Nullable<double> value);
    partial void OnCostCenterChanged();
    partial void OnCostCenterNameChanging(string value);
    partial void OnCostCenterNameChanged();
    partial void OnLocationChanging(System.Nullable<double> value);
    partial void OnLocationChanged();
    partial void OnResponsiblePersonChanging(string value);
    partial void OnResponsiblePersonChanged();
    partial void OnRegisterDepartmentChanging(string value);
    partial void OnRegisterDepartmentChanged();
    partial void OnRegisterSAPChanging(string value);
    partial void OnRegisterSAPChanged();
    partial void OnRegisterAS400Changing(string value);
    partial void OnRegisterAS400Changed();
    partial void OnEV_GroupChanging(System.Nullable<double> value);
    partial void OnEV_GroupChanged();
    partial void OnInternalOrderChanging(string value);
    partial void OnInternalOrderChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnDocWithdrawNumberChanging(System.Nullable<double> value);
    partial void OnDocWithdrawNumberChanged();
    partial void OnDateWithdrawChanging(System.Nullable<System.DateTime> value);
    partial void OnDateWithdrawChanged();
    partial void OnFromTranferChanging(string value);
    partial void OnFromTranferChanged();
    partial void OnDocTranferChanging(string value);
    partial void OnDocTranferChanged();
    partial void OnNoteChanging(string value);
    partial void OnNoteChanged();
    #endregion
		
		public Tool123()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountTool", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CountTool
		{
			get
			{
				return this._CountTool;
			}
			set
			{
				if ((this._CountTool != value))
				{
					this.OnCountToolChanging(value);
					this.SendPropertyChanging();
					this._CountTool = value;
					this.SendPropertyChanged("CountTool");
					this.OnCountToolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDTool", DbType="Float")]
		public System.Nullable<double> IDTool
		{
			get
			{
				return this._IDTool;
			}
			set
			{
				if ((this._IDTool != value))
				{
					this.OnIDToolChanging(value);
					this.SendPropertyChanging();
					this._IDTool = value;
					this.SendPropertyChanged("IDTool");
					this.OnIDToolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateInvoice", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateInvoice
		{
			get
			{
				return this._DateInvoice;
			}
			set
			{
				if ((this._DateInvoice != value))
				{
					this.OnDateInvoiceChanging(value);
					this.SendPropertyChanging();
					this._DateInvoice = value;
					this.SendPropertyChanged("DateInvoice");
					this.OnDateInvoiceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceNumber", DbType="NVarChar(255)")]
		public string InvoiceNumber
		{
			get
			{
				return this._InvoiceNumber;
			}
			set
			{
				if ((this._InvoiceNumber != value))
				{
					this.OnInvoiceNumberChanging(value);
					this.SendPropertyChanging();
					this._InvoiceNumber = value;
					this.SendPropertyChanged("InvoiceNumber");
					this.OnInvoiceNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveryDates", DbType="DateTime")]
		public System.Nullable<System.DateTime> DeliveryDates
		{
			get
			{
				return this._DeliveryDates;
			}
			set
			{
				if ((this._DeliveryDates != value))
				{
					this.OnDeliveryDatesChanging(value);
					this.SendPropertyChanging();
					this._DeliveryDates = value;
					this.SendPropertyChanged("DeliveryDates");
					this.OnDeliveryDatesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(255)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Float")]
		public System.Nullable<double> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Unit", DbType="NVarChar(255)")]
		public string Unit
		{
			get
			{
				return this._Unit;
			}
			set
			{
				if ((this._Unit != value))
				{
					this.OnUnitChanging(value);
					this.SendPropertyChanging();
					this._Unit = value;
					this.SendPropertyChanged("Unit");
					this.OnUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price1", DbType="Float")]
		public System.Nullable<double> Price1
		{
			get
			{
				return this._Price1;
			}
			set
			{
				if ((this._Price1 != value))
				{
					this.OnPrice1Changing(value);
					this.SendPropertyChanging();
					this._Price1 = value;
					this.SendPropertyChanged("Price1");
					this.OnPrice1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price2", DbType="Float")]
		public System.Nullable<double> Price2
		{
			get
			{
				return this._Price2;
			}
			set
			{
				if ((this._Price2 != value))
				{
					this.OnPrice2Changing(value);
					this.SendPropertyChanging();
					this._Price2 = value;
					this.SendPropertyChanged("Price2");
					this.OnPrice2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CostCenter", DbType="Float")]
		public System.Nullable<double> CostCenter
		{
			get
			{
				return this._CostCenter;
			}
			set
			{
				if ((this._CostCenter != value))
				{
					this.OnCostCenterChanging(value);
					this.SendPropertyChanging();
					this._CostCenter = value;
					this.SendPropertyChanged("CostCenter");
					this.OnCostCenterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CostCenterName", DbType="NVarChar(255)")]
		public string CostCenterName
		{
			get
			{
				return this._CostCenterName;
			}
			set
			{
				if ((this._CostCenterName != value))
				{
					this.OnCostCenterNameChanging(value);
					this.SendPropertyChanging();
					this._CostCenterName = value;
					this.SendPropertyChanged("CostCenterName");
					this.OnCostCenterNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Location", DbType="Float")]
		public System.Nullable<double> Location
		{
			get
			{
				return this._Location;
			}
			set
			{
				if ((this._Location != value))
				{
					this.OnLocationChanging(value);
					this.SendPropertyChanging();
					this._Location = value;
					this.SendPropertyChanged("Location");
					this.OnLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResponsiblePerson", DbType="NVarChar(255)")]
		public string ResponsiblePerson
		{
			get
			{
				return this._ResponsiblePerson;
			}
			set
			{
				if ((this._ResponsiblePerson != value))
				{
					this.OnResponsiblePersonChanging(value);
					this.SendPropertyChanging();
					this._ResponsiblePerson = value;
					this.SendPropertyChanged("ResponsiblePerson");
					this.OnResponsiblePersonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegisterDepartment", DbType="NVarChar(255)")]
		public string RegisterDepartment
		{
			get
			{
				return this._RegisterDepartment;
			}
			set
			{
				if ((this._RegisterDepartment != value))
				{
					this.OnRegisterDepartmentChanging(value);
					this.SendPropertyChanging();
					this._RegisterDepartment = value;
					this.SendPropertyChanged("RegisterDepartment");
					this.OnRegisterDepartmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegisterSAP", DbType="NVarChar(255)")]
		public string RegisterSAP
		{
			get
			{
				return this._RegisterSAP;
			}
			set
			{
				if ((this._RegisterSAP != value))
				{
					this.OnRegisterSAPChanging(value);
					this.SendPropertyChanging();
					this._RegisterSAP = value;
					this.SendPropertyChanged("RegisterSAP");
					this.OnRegisterSAPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegisterAS400", DbType="NVarChar(255)")]
		public string RegisterAS400
		{
			get
			{
				return this._RegisterAS400;
			}
			set
			{
				if ((this._RegisterAS400 != value))
				{
					this.OnRegisterAS400Changing(value);
					this.SendPropertyChanging();
					this._RegisterAS400 = value;
					this.SendPropertyChanged("RegisterAS400");
					this.OnRegisterAS400Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EV_Group", DbType="Float")]
		public System.Nullable<double> EV_Group
		{
			get
			{
				return this._EV_Group;
			}
			set
			{
				if ((this._EV_Group != value))
				{
					this.OnEV_GroupChanging(value);
					this.SendPropertyChanging();
					this._EV_Group = value;
					this.SendPropertyChanged("EV_Group");
					this.OnEV_GroupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InternalOrder", DbType="NVarChar(255)")]
		public string InternalOrder
		{
			get
			{
				return this._InternalOrder;
			}
			set
			{
				if ((this._InternalOrder != value))
				{
					this.OnInternalOrderChanging(value);
					this.SendPropertyChanging();
					this._InternalOrder = value;
					this.SendPropertyChanged("InternalOrder");
					this.OnInternalOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="NVarChar(255)")]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocWithdrawNumber", DbType="Float")]
		public System.Nullable<double> DocWithdrawNumber
		{
			get
			{
				return this._DocWithdrawNumber;
			}
			set
			{
				if ((this._DocWithdrawNumber != value))
				{
					this.OnDocWithdrawNumberChanging(value);
					this.SendPropertyChanging();
					this._DocWithdrawNumber = value;
					this.SendPropertyChanged("DocWithdrawNumber");
					this.OnDocWithdrawNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateWithdraw", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateWithdraw
		{
			get
			{
				return this._DateWithdraw;
			}
			set
			{
				if ((this._DateWithdraw != value))
				{
					this.OnDateWithdrawChanging(value);
					this.SendPropertyChanging();
					this._DateWithdraw = value;
					this.SendPropertyChanged("DateWithdraw");
					this.OnDateWithdrawChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromTranfer", DbType="NVarChar(255)")]
		public string FromTranfer
		{
			get
			{
				return this._FromTranfer;
			}
			set
			{
				if ((this._FromTranfer != value))
				{
					this.OnFromTranferChanging(value);
					this.SendPropertyChanging();
					this._FromTranfer = value;
					this.SendPropertyChanged("FromTranfer");
					this.OnFromTranferChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocTranfer", DbType="NVarChar(255)")]
		public string DocTranfer
		{
			get
			{
				return this._DocTranfer;
			}
			set
			{
				if ((this._DocTranfer != value))
				{
					this.OnDocTranferChanging(value);
					this.SendPropertyChanging();
					this._DocTranfer = value;
					this.SendPropertyChanged("DocTranfer");
					this.OnDocTranferChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Note", DbType="NVarChar(255)")]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this.OnNoteChanging(value);
					this.SendPropertyChanging();
					this._Note = value;
					this.SendPropertyChanged("Note");
					this.OnNoteChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Employee")]
	public partial class Employee123 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CountEmp;
		
		private System.Nullable<double> _IDEmp;
		
		private string _Name;
		
		private string _Department;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCountEmpChanging(int value);
    partial void OnCountEmpChanged();
    partial void OnIDEmpChanging(System.Nullable<double> value);
    partial void OnIDEmpChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDepartmentChanging(string value);
    partial void OnDepartmentChanged();
    #endregion
		
		public Employee123()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountEmp", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CountEmp
		{
			get
			{
				return this._CountEmp;
			}
			set
			{
				if ((this._CountEmp != value))
				{
					this.OnCountEmpChanging(value);
					this.SendPropertyChanging();
					this._CountEmp = value;
					this.SendPropertyChanged("CountEmp");
					this.OnCountEmpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDEmp", DbType="Float")]
		public System.Nullable<double> IDEmp
		{
			get
			{
				return this._IDEmp;
			}
			set
			{
				if ((this._IDEmp != value))
				{
					this.OnIDEmpChanging(value);
					this.SendPropertyChanging();
					this._IDEmp = value;
					this.SendPropertyChanged("IDEmp");
					this.OnIDEmpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(255)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Department", DbType="NVarChar(255)")]
		public string Department
		{
			get
			{
				return this._Department;
			}
			set
			{
				if ((this._Department != value))
				{
					this.OnDepartmentChanging(value);
					this.SendPropertyChanging();
					this._Department = value;
					this.SendPropertyChanged("Department");
					this.OnDepartmentChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Borrow")]
	public partial class Borrow : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CountBorrow;
		
		private System.Nullable<System.DateTime> _DateBorrow;
		
		private System.Nullable<System.DateTime> _DateReturn;
		
		private System.Nullable<double> _IDTool;
		
		private string _Description;
		
		private string _Amount;
		
		private string _Detail;
		
		private string _Status;
		
		private System.Nullable<double> _IDEmp;
		
		private string _Name;
		
		private string _Department;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCountBorrowChanging(int value);
    partial void OnCountBorrowChanged();
    partial void OnDateBorrowChanging(System.Nullable<System.DateTime> value);
    partial void OnDateBorrowChanged();
    partial void OnDateReturnChanging(System.Nullable<System.DateTime> value);
    partial void OnDateReturnChanged();
    partial void OnIDToolChanging(System.Nullable<double> value);
    partial void OnIDToolChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnAmountChanging(string value);
    partial void OnAmountChanged();
    partial void OnDetailChanging(string value);
    partial void OnDetailChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnIDEmpChanging(System.Nullable<double> value);
    partial void OnIDEmpChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDepartmentChanging(string value);
    partial void OnDepartmentChanged();
    #endregion
		
		public Borrow()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountBorrow", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CountBorrow
		{
			get
			{
				return this._CountBorrow;
			}
			set
			{
				if ((this._CountBorrow != value))
				{
					this.OnCountBorrowChanging(value);
					this.SendPropertyChanging();
					this._CountBorrow = value;
					this.SendPropertyChanged("CountBorrow");
					this.OnCountBorrowChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateBorrow", DbType="Date")]
		public System.Nullable<System.DateTime> DateBorrow
		{
			get
			{
				return this._DateBorrow;
			}
			set
			{
				if ((this._DateBorrow != value))
				{
					this.OnDateBorrowChanging(value);
					this.SendPropertyChanging();
					this._DateBorrow = value;
					this.SendPropertyChanged("DateBorrow");
					this.OnDateBorrowChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateReturn", DbType="Date")]
		public System.Nullable<System.DateTime> DateReturn
		{
			get
			{
				return this._DateReturn;
			}
			set
			{
				if ((this._DateReturn != value))
				{
					this.OnDateReturnChanging(value);
					this.SendPropertyChanging();
					this._DateReturn = value;
					this.SendPropertyChanged("DateReturn");
					this.OnDateReturnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDTool", DbType="Float")]
		public System.Nullable<double> IDTool
		{
			get
			{
				return this._IDTool;
			}
			set
			{
				if ((this._IDTool != value))
				{
					this.OnIDToolChanging(value);
					this.SendPropertyChanging();
					this._IDTool = value;
					this.SendPropertyChanged("IDTool");
					this.OnIDToolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(255)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="NVarChar(50)")]
		public string Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Detail", DbType="NVarChar(255)")]
		public string Detail
		{
			get
			{
				return this._Detail;
			}
			set
			{
				if ((this._Detail != value))
				{
					this.OnDetailChanging(value);
					this.SendPropertyChanging();
					this._Detail = value;
					this.SendPropertyChanged("Detail");
					this.OnDetailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="NVarChar(100)")]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDEmp", DbType="Float")]
		public System.Nullable<double> IDEmp
		{
			get
			{
				return this._IDEmp;
			}
			set
			{
				if ((this._IDEmp != value))
				{
					this.OnIDEmpChanging(value);
					this.SendPropertyChanging();
					this._IDEmp = value;
					this.SendPropertyChanged("IDEmp");
					this.OnIDEmpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(255)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Department", DbType="NVarChar(100)")]
		public string Department
		{
			get
			{
				return this._Department;
			}
			set
			{
				if ((this._Department != value))
				{
					this.OnDepartmentChanging(value);
					this.SendPropertyChanging();
					this._Department = value;
					this.SendPropertyChanged("Department");
					this.OnDepartmentChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
